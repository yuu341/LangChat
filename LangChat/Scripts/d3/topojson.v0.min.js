topojson=function(){function i(n,t){function e(t){var r=n.arcs[t],u=r[0],i=[0,0];return r.forEach(function(n){i[0]+=n[0];i[1]+=n[1]}),[u,i]}var u={},r={},i={},f,o;t.forEach(function(n){var t=e(n);(u[t[0]]||(u[t[0]]=[])).push(n);(u[t[1]]||(u[t[1]]=[])).push(~n)});t.forEach(function(n){var c=e(n),s=c[0],h=c[1],t,u,o,f;(t=i[s])?(delete i[t.end],t.push(n),t.end=h,(u=r[h])?(delete r[u.start],f=u===t?t:t.concat(u),r[f.start=t.start]=i[f.end=u.end]=f):(u=i[h])?(delete r[u.start],delete i[u.end],f=t.concat(u.map(function(n){return~n}).reverse()),r[f.start=t.start]=i[f.end=u.start]=f):r[t.start]=i[t.end]=t):(t=r[h])?(delete r[t.start],t.unshift(n),t.start=s,(u=i[s])?(delete i[u.end],o=u===t?t:u.concat(t),r[o.start=u.start]=i[o.end=t.end]=o):(u=r[s])?(delete r[u.start],delete i[u.end],o=u.map(function(n){return~n}).reverse().concat(t),r[o.start=u.end]=i[o.end=t.end]=o):r[t.start]=i[t.end]=t):(t=r[s])?(delete r[t.start],t.unshift(~n),t.start=h,(u=i[h])?(delete i[u.end],o=u===t?t:u.concat(t),r[o.start=u.start]=i[o.end=t.end]=o):(u=r[h])?(delete r[u.start],delete i[u.end],o=u.map(function(n){return~n}).reverse().concat(t),r[o.start=u.end]=i[o.end=t.end]=o):r[t.start]=i[t.end]=t):(t=i[h])?(delete i[t.end],t.push(~n),t.end=s,(u=i[s])?(delete r[u.start],f=u===t?t:t.concat(u),r[f.start=t.start]=i[f.end=u.end]=f):(u=r[s])?(delete r[u.start],delete i[u.end],f=t.concat(u.map(function(n){return~n}).reverse()),r[f.start=t.start]=i[f.end=u.start]=f):r[t.start]=i[t.end]=t):(t=[n],r[t.start=s]=i[t.end=h]=t)});f=[];for(o in i)f.push(i[o]);return f}function r(t,r,u){var f=[],e,c,h,o,v;if(arguments.length>1){e=[];function y(n){n<0&&(n=~n);(e[n]||(e[n]=[])).push(c)}function l(n){n.forEach(y)}function s(n){n.forEach(l)}function a(n){n.type==="GeometryCollection"?n.geometries.forEach(a):n.type in h&&(c=n,h[n.type](n.arcs))}h={LineString:l,MultiLineString:s,Polygon:s,MultiPolygon:function(n){n.forEach(s)}};a(r);e.forEach(arguments.length<3?function(n,t){f.push([t])}:function(n,t){u(n[0],n[n.length-1])&&f.push([t])})}else for(o=0,v=t.arcs.length;o<v;++o)f.push([o]);return n(t,{type:"MultiLineString",arcs:i(t,f)})}function n(n,t){function y(n,t){t.length&&t.pop();for(var r=v[n<0?~n:n],i=0,h=r.length,l=0,a=0,c;i<h;++i)t.push([(l+=(c=r[i])[0])*f+o,(a+=c[1])*e+s]);n<0&&u(t,h)}function h(n){return[n[0]*f+o,n[1]*e+s]}function r(n){for(var t=[],i=0,r=n.length;i<r;++i)y(n[i],t);return t.length<2&&t.push(t[0]),t}function p(n){for(var t=r(n);t.length<4;)t.push(t[0]);return t}function c(n){return n.map(p)}function l(n){var t=n.type,i=t==="GeometryCollection"?{type:t,geometries:n.geometries.map(l)}:t in a?{type:t,coordinates:a[t](n)}:{type:null};return"id"in n&&(i.id=n.id),"properties"in n&&(i.properties=n.properties),i}var i=n.transform,f=i.scale[0],e=i.scale[1],o=i.translate[0],s=i.translate[1],v=n.arcs,a={Point:function(n){return h(n.coordinates)},MultiPoint:function(n){return n.coordinates.map(h)},LineString:function(n){return r(n.arcs)},MultiLineString:function(n){return n.arcs.map(r)},Polygon:function(n){return c(n.arcs)},MultiPolygon:function(n){return n.arcs.map(c)}};return l(t)}function u(n,t){for(var u,i=n.length,r=i-t;r<--i;)u=n[r],n[r++]=n[i],n[i]=u}function t(n,t){for(var i=0,u=n.length,r;i<u;)r=i+u>>>1,n[r]<t?i=r+1:u=r;return i}function f(n){function f(n,r){n.forEach(function(n){n<0&&(n=~n);var f=u[n]||(u[n]=[]);f[r]||(f.forEach(function(n){var u,f;f=t(u=i[r],n);u[f]!==n&&u.splice(f,0,n);f=t(u=i[n],r);u[f]!==r&&u.splice(f,0,r)}),f[r]=r)})}function r(n,t){n.forEach(function(n){f(n,t)})}function e(n,t){n.type==="GeometryCollection"?n.geometries.forEach(function(n){e(n,t)}):n.type in o&&o[n.type](n.arcs,t)}var u=[],i=n.map(function(){return[]}),o={LineString:f,MultiLineString:r,Polygon:r,MultiPolygon:function(n,t){n.forEach(function(n){r(n,t)})}};return n.forEach(e),i}return{version:"0.0.32",mesh:r,object:n,neighbors:f}}();
//# sourceMappingURL=topojson.v0.min.js.map
